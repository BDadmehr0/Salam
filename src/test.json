{
  "type": "Program",
  "functions": [
    {
      "name": "test",
      "args": [],
      "body": {
        "children": [
          {
            "type": "Print",
            "value": {
              "type": "ExpressionVariable",
              "value_type": {
                "type": "Type",
                "is_system": false,
                "is_primitive": false,
                "type_kind": "int",
                "is_pointer": false,
                "is_reference": false,
                "is_array": false,
                "members": [],
                "func_args": []
              },
              "left": {
                "type": "ExpressionLiteral",
                "value_type": {
                  "type": "Type",
                  "is_system": false,
                  "is_primitive": false,
                  "type_kind": "identifier",
                  "is_pointer": false,
                  "is_reference": false,
                  "is_array": false,
                  "members": [],
                  "func_args": []
                },
                "value": "age"
              }
            }
          },
          {
            "type": "Return",
            "value": {
              "type": "ExpressionLiteral",
              "value_type": {
                "type": "Type",
                "is_system": false,
                "is_primitive": true,
                "type_kind": "string",
                "is_pointer": false,
                "is_reference": false,
                "is_array": false,
                "members": [],
                "func_args": []
              },
              "value": ""
            }
          }
        ]
      },
      "return_type": {
        "type": "Type",
        "type_kind": "string"
      }
    },
    {
      "name": "main",
      "args": [],
      "body": {
        "children": [
          {
            "type": "ExpressionDeclaration",
            "value_type": {
              "type": "Type",
              "is_system": false,
              "is_primitive": false,
              "type_kind": "string",
              "is_pointer": false,
              "is_reference": false,
              "is_array": false,
              "members": [],
              "func_args": []
            },
            "name": "bbb",
            "value": {
              "type": "ExpressionLiteral",
              "value_type": {
                "type": "Type",
                "is_system": false,
                "is_primitive": true,
                "type_kind": "string",
                "is_pointer": false,
                "is_reference": false,
                "is_array": false,
                "members": [],
                "func_args": []
              },
              "value": "hey"
            }
          },
          {
            "type": "ExpressionDeclaration",
            "value_type": {
              "type": "Type",
              "is_system": false,
              "is_primitive": false,
              "type_kind": "string",
              "is_pointer": false,
              "is_reference": false,
              "is_array": false,
              "members": [],
              "func_args": []
            },
            "name": "aaa",
            "value": {
              "type": "ExpressionBinary",
              "value_type": {
                "type": "Type",
                "is_system": false,
                "is_primitive": true,
                "type_kind": "string",
                "is_pointer": false,
                "is_reference": false,
                "is_array": false,
                "members": [],
                "func_args": []
              },
              "left": {
                "type": "ExpressionBinary",
                "value_type": {
                  "type": "Type",
                  "is_system": false,
                  "is_primitive": true,
                  "type_kind": "string",
                  "is_pointer": false,
                  "is_reference": false,
                  "is_array": false,
                  "members": [],
                  "func_args": []
                },
                "left": {
                  "type": "ExpressionBinary",
                  "value_type": {
                    "type": "Type",
                    "is_system": false,
                    "is_primitive": true,
                    "type_kind": "string",
                    "is_pointer": false,
                    "is_reference": false,
                    "is_array": false,
                    "members": [],
                    "func_args": []
                  },
                  "left": {
                    "type": "ExpressionLiteral",
                    "value_type": {
                      "type": "Type",
                      "is_system": false,
                      "is_primitive": true,
                      "type_kind": "string",
                      "is_pointer": false,
                      "is_reference": false,
                      "is_array": false,
                      "members": [],
                      "func_args": []
                    },
                    "value": "..."
                  },
                  "operator": "PLUS",
                  "right": {
                    "type": "ExpressionLiteral",
                    "value_type": {
                      "type": "Type",
                      "is_system": false,
                      "is_primitive": true,
                      "type_kind": "string",
                      "is_pointer": false,
                      "is_reference": false,
                      "is_array": false,
                      "members": [],
                      "func_args": []
                    },
                    "value": "!!!"
                  }
                },
                "operator": "PLUS",
                "right": {
                  "type": "ExpressionLiteral",
                  "value_type": {
                    "type": "Type",
                    "is_system": false,
                    "is_primitive": true,
                    "type_kind": "string",
                    "is_pointer": false,
                    "is_reference": false,
                    "is_array": false,
                    "members": [],
                    "func_args": []
                  },
                  "value": "??? END"
                }
              },
              "operator": "PLUS",
              "right": {
                "type": "ExpressionFunctionCall",
                "value_type": {
                  "type": "Type",
                  "is_system": false,
                  "is_primitive": false,
                  "type_kind": "string",
                  "is_pointer": false,
                  "is_reference": false,
                  "is_array": false,
                  "members": [],
                  "func_args": []
                },
                "generated_value": "int2str",
                "left": {
                  "type": "ExpressionVariable",
                  "value_type": {
                    "type": "Type",
                    "is_system": false,
                    "is_primitive": false,
                    "type_kind": "function",
                    "is_pointer": false,
                    "is_reference": false,
                    "is_array": false,
                    "members": [],
                    "func_name": "int2str",
                    "func_generated_name": "int2str",
                    "func_args": [
                      {
                        "type": "FunctionArgument",
                        "name": "c",
                        "value_type": {
                          "type": "Type",
                          "is_system": false,
                          "is_primitive": false,
                          "type_kind": "int",
                          "is_pointer": false,
                          "is_reference": false,
                          "is_array": false,
                          "members": [],
                          "func_args": []
                        },
                        "is_optional": false
                      }
                    ],
                    "func_return_type": {
                      "type": "Type",
                      "is_system": false,
                      "is_primitive": false,
                      "type_kind": "string",
                      "is_pointer": false,
                      "is_reference": false,
                      "is_array": false,
                      "members": [],
                      "func_args": []
                    }
                  },
                  "left": {
                    "type": "ExpressionLiteral",
                    "value_type": {
                      "type": "Type",
                      "is_system": false,
                      "is_primitive": false,
                      "type_kind": "identifier",
                      "is_pointer": false,
                      "is_reference": false,
                      "is_array": false,
                      "members": [],
                      "func_args": []
                    },
                    "value": "int2str"
                  }
                },
                "parameters": [
                  {
                    "type": "FunctionParameter",
                    "value": {
                      "type": "ExpressionLiteral",
                      "value_type": {
                        "type": "Type",
                        "is_system": false,
                        "is_primitive": true,
                        "type_kind": "int",
                        "is_pointer": false,
                        "is_reference": false,
                        "is_array": false,
                        "members": [],
                        "func_args": []
                      },
                      "value": "33"
                    }
                  }
                ]
              }
            }
          }
        ]
      },
      "return_type": {
        "type": "Type",
        "type_kind": "string"
      }
    }
  ],
  "layout": {
    "root": {
      "kind": "NormalElement",
      "enduser_name": "layout",
      "generate_type": "RuntimeElementLayout",
      "block": {
        "items": [
          {
            "kind": "NormalElement",
            "built_in_selector": ".a",
            "enduser_name": "input",
            "generate_name": "input",
            "generate_type": "RuntimeElementInput",
            "block": {
              "items": [
                {
                  "kind": "StyleState",
                  "built_in_selector": ".a",
                  "enduser_name": "hover",
                  "generate_name": "hover",
                  "generate_type": "RuntimeElementStyleStateHover",
                  "block": {
                    "items": [
                      {
                        "kind": "NormalElement",
                        "built_in_selector": ".a",
                        "enduser_name": "media",
                        "generate_name": "media",
                        "generate_type": "RuntimeStyleElementMedia",
                        "block": {
                          "items": []
                        },
                        "attributes": {
                          "items": [
                            {
                              "key": "condition",
                              "value": {
                                "type": "ExpressionLiteral",
                                "value_type": "ExpressionLiteral",
                                "value": "screen and (min-width: 400px)"
                              },
                              "kind": "Style",
                              "enduser_name": "condition",
                              "generate_name": "condition",
                              "generate_type": "RuntimeElementAttribute"
                            }
                          ]
                        },
                        "styles": {
                          "items": [
                            {
                              "key": "background color",
                              "value": {
                                "type": "ExpressionLiteral",
                                "value_type": "ExpressionLiteral",
                                "value": "pink"
                              },
                              "kind": "Style",
                              "enduser_name": "background color",
                              "generate_name": "background-color",
                              "generate_type": "RuntimeElementAttributeValue",
                              "generate_value": "pink"
                            }
                          ]
                        },
                        "repeat": 1
                      }
                    ]
                  },
                  "attributes": {
                    "items": []
                  },
                  "styles": {
                    "items": [
                      {
                        "key": "background color",
                        "value": {
                          "type": "ExpressionLiteral",
                          "value_type": "ExpressionLiteral",
                          "value": "white"
                        },
                        "kind": "Style",
                        "enduser_name": "background color",
                        "generate_name": "background-color",
                        "generate_type": "RuntimeElementAttributeValue",
                        "generate_value": "white"
                      }
                    ]
                  },
                  "repeat": 1
                },
                {
                  "kind": "StyleState",
                  "built_in_selector": ".a",
                  "enduser_name": "focus",
                  "generate_name": "focus",
                  "generate_type": "RuntimeElementStyleStateFocus",
                  "block": {
                    "items": [
                      {
                        "kind": "NormalElement",
                        "built_in_selector": ".a",
                        "enduser_name": "media",
                        "generate_name": "media",
                        "generate_type": "RuntimeStyleElementMedia",
                        "block": {
                          "items": []
                        },
                        "attributes": {
                          "items": [
                            {
                              "key": "condition",
                              "value": {
                                "type": "ExpressionLiteral",
                                "value_type": "ExpressionLiteral",
                                "value": "screen and (min-width: 400px)"
                              },
                              "kind": "Style",
                              "enduser_name": "condition",
                              "generate_name": "condition",
                              "generate_type": "RuntimeElementAttribute"
                            }
                          ]
                        },
                        "styles": {
                          "items": [
                            {
                              "key": "background color",
                              "value": {
                                "type": "ExpressionLiteral",
                                "value_type": "ExpressionLiteral",
                                "value": "pink"
                              },
                              "kind": "Style",
                              "enduser_name": "background color",
                              "generate_name": "background-color",
                              "generate_type": "RuntimeElementAttributeValue",
                              "generate_value": "pink"
                            }
                          ]
                        },
                        "repeat": 1
                      }
                    ]
                  },
                  "attributes": {
                    "items": []
                  },
                  "styles": {
                    "items": [
                      {
                        "key": "background color",
                        "value": {
                          "type": "ExpressionLiteral",
                          "value_type": "ExpressionLiteral",
                          "value": "green"
                        },
                        "kind": "Style",
                        "enduser_name": "background color",
                        "generate_name": "background-color",
                        "generate_type": "RuntimeElementAttributeValue",
                        "generate_value": "green"
                      }
                    ]
                  },
                  "repeat": 1
                },
                {
                  "kind": "NormalElement",
                  "built_in_selector": ".a",
                  "enduser_name": "media",
                  "generate_name": "media",
                  "generate_type": "RuntimeStyleElementMedia",
                  "block": {
                    "items": []
                  },
                  "attributes": {
                    "items": [
                      {
                        "key": "condition",
                        "value": {
                          "type": "ExpressionLiteral",
                          "value_type": "ExpressionLiteral",
                          "value": "screen and (min-width: 400px)"
                        },
                        "kind": "Style",
                        "enduser_name": "condition",
                        "generate_name": "condition",
                        "generate_type": "RuntimeElementAttribute"
                      }
                    ]
                  },
                  "styles": {
                    "items": [
                      {
                        "key": "background color",
                        "value": {
                          "type": "ExpressionLiteral",
                          "value_type": "ExpressionLiteral",
                          "value": "pink"
                        },
                        "kind": "Style",
                        "enduser_name": "background color",
                        "generate_name": "background-color",
                        "generate_type": "RuntimeElementAttributeValue",
                        "generate_value": "pink"
                      }
                    ]
                  },
                  "repeat": 1
                }
              ]
            },
            "attributes": {
              "items": [
                {
                  "key": "repeat",
                  "value": {
                    "type": "ExpressionLiteral",
                    "value_type": "ExpressionLiteral",
                    "value": "10"
                  },
                  "kind": "Normal",
                  "enduser_name": "repeat",
                  "generate_type": "RuntimeGlobalAttributeRepeat"
                }
              ]
            },
            "styles": {
              "items": [
                {
                  "key": "color",
                  "value": {
                    "type": "ExpressionLiteral",
                    "value_type": "ExpressionLiteral",
                    "value": "white"
                  },
                  "kind": "Style",
                  "enduser_name": "color",
                  "generate_name": "color",
                  "generate_type": "RuntimeElementAttributeValue",
                  "generate_value": "white"
                },
                {
                  "key": "background color",
                  "value": {
                    "type": "ExpressionLiteral",
                    "value_type": "ExpressionLiteral",
                    "value": "black"
                  },
                  "kind": "Style",
                  "enduser_name": "background color",
                  "generate_name": "background-color",
                  "generate_type": "RuntimeElementAttributeValue",
                  "generate_value": "black"
                },
                {
                  "key": "margin top",
                  "value": {
                    "type": "ExpressionLiteral",
                    "value_type": "ExpressionLiteral",
                    "value": "20"
                  },
                  "kind": "Style",
                  "enduser_name": "margin top",
                  "generate_name": "margin-top",
                  "generate_type": "RuntimeStyleMarginTop"
                },
                {
                  "key": "padding top",
                  "value": {
                    "type": "ExpressionLiteral",
                    "value_type": "ExpressionLiteral",
                    "value": "20px"
                  },
                  "kind": "Style",
                  "enduser_name": "padding top",
                  "generate_name": "padding-top",
                  "generate_type": "RuntimeStylePaddingTop"
                }
              ]
            },
            "repeat": 10
          }
        ]
      },
      "attributes": {
        "items": []
      },
      "styles": {
        "items": []
      },
      "repeat": 1
    }
  },
  "errors": [],
  "language": {
    "id": "English",
    "name": "English",
    "local_name": "English",
    "flag": "en"
  }
}